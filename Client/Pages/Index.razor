@page "/"
@using hopkins.tech.Shared
@inject HttpClient Http

<PageTitle>Ben Hopkins</PageTitle>

@if (content == null || icons == null)
{
    <div class="container-fluid content">
        <p><em>Loading...</em></p>
    </div>
}
else
{
    <div class="d-flex flex-column justify-content-center align-items-center vh-100">
        <div class="display-4">@content.Title</div>
        <h2>@content.Tagline</h2>
        <div class="d-flex flex-column justify-content-center align-items-center">
            <div class="d-flex flex-row flex-wrap">
            @foreach (var icon in icons.Take(4))
            {
                <a href="@icon.Link" target="_blank">
                    <div class="p-2"><span class="iconify" data-icon="@icon.Icon" style="color: @icon.Colour;" data-width="@icon.Width" data-height="@icon.Height"></span> </div>
                </a>
            }
            </div>
            <div class="d-flex flex-row flex-wrap">
            @foreach (var icon in icons.Skip(4).Take(4))
            {
                <a href="@icon.Link" target="_blank">
                    <div class="p-2"><span class="iconify" data-icon="@icon.Icon" style="color: @icon.Colour;" data-width="@icon.Width" data-height="@icon.Height"></span> </div>
                </a>
            }
            </div>
        </div>
    </div>
}

@code {
    private IndexData? content;
    private List<SocialIconData>? icons;

    protected override async Task OnInitializedAsync()
    {
        content = await Http.GetFromJsonAsync<IndexData>("api/index");
        icons = await Http.GetFromJsonAsync<List<SocialIconData>>("api/socialicon");
    }
}